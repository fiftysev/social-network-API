openapi: 3.0.3
info:
  title: Social-Network-API
  description: 'Social Network API for Front-end learning projects'
  version: 1.0.0
servers:
  -
    url: 'localhost:80'
paths:
  /api/auth/register:
    post:
      summary: 'Register new user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: Successfully
          content:
            text/plain:
              schema:
                type: string
                example: "registered {\n \"token\": $10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC\n}"
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: et
                last_name:
                  type: string
                  description: ''
                  example: id
                username:
                  type: string
                  description: ''
                  example: assumenda
                email:
                  type: string
                  description: ''
                  example: quisquam
                password:
                  type: string
                  description: ''
                  example: sed
                password_confirmation:
                  type: string
                  description: ''
                  example: maiores
              required:
                - first_name
                - last_name
                - username
                - email
                - password
                - password_confirmation
      security: []
  /api/auth/login:
    post:
      summary: 'Login user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Successfully
          content:
            text/plain:
              schema:
                type: string
                example: "logged in {\n \"token\": $10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC\n}"
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: ''
                  example: cupiditate
                password:
                  type: string
                  description: ''
                  example: quibusdam
              required:
                - username
                - password
      security: []
  /api/auth/logout:
    get:
      summary: 'Logout current auth user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Authentication
  /api/auth/me:
    get:
      summary: 'Get info about current auth user.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Authentication
  /api/users:
    get:
      summary: 'All users list'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Current page number'
          example: 3
          required: false
          schema:
            type: integer
            description: 'Current page number'
            example: 3
        -
          in: query
          name: per_page
          description: 'Page size'
          example: 12
          required: false
          schema:
            type: integer
            description: 'Page size'
            example: 12
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 3
                  data:
                    -
                      id: 25
                      first_name: Cassandra
                      last_name: Rempel
                      status: 'Beatae inventore aliquam illum quia doloribus.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: kelton94
                      email: thompson.dorian@example.net
                    -
                      id: 26
                      first_name: Luther
                      last_name: Larkin
                      status: 'Id omnis dolores molestias.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: djohnson
                      email: carmine48@example.com
                    -
                      id: 27
                      first_name: Sylvester
                      last_name: Schuster
                      status: 'Beatae velit asperiores dignissimos nisi voluptas odit.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: lchamplin
                      email: abraham.mante@example.com
                    -
                      id: 28
                      first_name: Shana
                      last_name: Williamson
                      status: 'Veniam iusto sed repellendus nihil qui quasi cumque.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: hharris
                      email: nullrich@example.org
                    -
                      id: 29
                      first_name: Justus
                      last_name: Block
                      status: 'Vel labore sint quos dicta fugiat dolorum odio quaerat.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: kiara85
                      email: itzel56@example.com
                    -
                      id: 30
                      first_name: Jayne
                      last_name: Hudson
                      status: 'Nesciunt labore laborum incidunt velit sed voluptas veniam.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: newell71
                      email: henri66@example.org
                    -
                      id: 31
                      first_name: Rafael
                      last_name: Shanahan
                      status: 'Distinctio qui itaque sapiente qui aut eius.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: clarkin
                      email: harber.emily@example.com
                    -
                      id: 32
                      first_name: Percy
                      last_name: Carroll
                      status: 'Omnis aperiam aut cum repellendus.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: loyal.hagenes
                      email: remington.ondricka@example.org
                    -
                      id: 33
                      first_name: Lilian
                      last_name: Fritsch
                      status: 'Aut placeat ut pariatur qui quia.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: gail.jones
                      email: lafayette02@example.com
                    -
                      id: 34
                      first_name: Willis
                      last_name: Baumbach
                      status: 'Est eaque reiciendis consequatur placeat.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: amalia.nienow
                      email: elliot.abbott@example.org
                    -
                      id: 35
                      first_name: Stanley
                      last_name: Treutel
                      status: 'Expedita dolorem voluptatibus tempore ullam et.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: kris.eden
                      email: damien.sanford@example.org
                    -
                      id: 36
                      first_name: Coty
                      last_name: Christiansen
                      status: 'Sed ut nobis dolorem aut qui molestiae sapiente.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: xarmstrong
                      email: xarmstrong@example.com
                  first_page_url: 'http://social-network-api.test/api/users?page=1'
                  from: 25
                  next_page_url: 'http://social-network-api.test/api/users?page=4'
                  path: 'http://social-network-api.test/api/users'
                  per_page: 12
                  prev_page_url: 'http://social-network-api.test/api/users?page=2'
                  to: 36
                properties:
                  current_page:
                    type: integer
                    example: 3
                  data:
                    type: array
                    example:
                      -
                        id: 25
                        first_name: Cassandra
                        last_name: Rempel
                        status: 'Beatae inventore aliquam illum quia doloribus.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: kelton94
                        email: thompson.dorian@example.net
                      -
                        id: 26
                        first_name: Luther
                        last_name: Larkin
                        status: 'Id omnis dolores molestias.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: djohnson
                        email: carmine48@example.com
                      -
                        id: 27
                        first_name: Sylvester
                        last_name: Schuster
                        status: 'Beatae velit asperiores dignissimos nisi voluptas odit.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: lchamplin
                        email: abraham.mante@example.com
                      -
                        id: 28
                        first_name: Shana
                        last_name: Williamson
                        status: 'Veniam iusto sed repellendus nihil qui quasi cumque.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: hharris
                        email: nullrich@example.org
                      -
                        id: 29
                        first_name: Justus
                        last_name: Block
                        status: 'Vel labore sint quos dicta fugiat dolorum odio quaerat.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: kiara85
                        email: itzel56@example.com
                      -
                        id: 30
                        first_name: Jayne
                        last_name: Hudson
                        status: 'Nesciunt labore laborum incidunt velit sed voluptas veniam.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: newell71
                        email: henri66@example.org
                      -
                        id: 31
                        first_name: Rafael
                        last_name: Shanahan
                        status: 'Distinctio qui itaque sapiente qui aut eius.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: clarkin
                        email: harber.emily@example.com
                      -
                        id: 32
                        first_name: Percy
                        last_name: Carroll
                        status: 'Omnis aperiam aut cum repellendus.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: loyal.hagenes
                        email: remington.ondricka@example.org
                      -
                        id: 33
                        first_name: Lilian
                        last_name: Fritsch
                        status: 'Aut placeat ut pariatur qui quia.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: gail.jones
                        email: lafayette02@example.com
                      -
                        id: 34
                        first_name: Willis
                        last_name: Baumbach
                        status: 'Est eaque reiciendis consequatur placeat.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: amalia.nienow
                        email: elliot.abbott@example.org
                      -
                        id: 35
                        first_name: Stanley
                        last_name: Treutel
                        status: 'Expedita dolorem voluptatibus tempore ullam et.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: kris.eden
                        email: damien.sanford@example.org
                      -
                        id: 36
                        first_name: Coty
                        last_name: Christiansen
                        status: 'Sed ut nobis dolorem aut qui molestiae sapiente.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: xarmstrong
                        email: xarmstrong@example.com
                    items:
                      type: object
                  first_page_url:
                    type: string
                    example: 'http://social-network-api.test/api/users?page=1'
                  from:
                    type: integer
                    example: 25
                  next_page_url:
                    type: string
                    example: 'http://social-network-api.test/api/users?page=4'
                  path:
                    type: string
                    example: 'http://social-network-api.test/api/users'
                  per_page:
                    type: integer
                    example: 12
                  prev_page_url:
                    type: string
                    example: 'http://social-network-api.test/api/users?page=2'
                  to:
                    type: integer
                    example: 36
      tags:
        - Users
      security: []
  '/api/users/{id}':
    get:
      summary: 'Get user by id'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 4
                  first_name: Vern
                  last_name: Kilback
                  status: 'Reprehenderit sit vel impedit ullam quos dolores sed.'
                  avatar: 'https://source.unsplash.com/random/300x300'
                  username: susan74
                  email: halle07@example.com
                properties:
                  id:
                    type: integer
                    example: 4
                  first_name:
                    type: string
                    example: Vern
                  last_name:
                    type: string
                    example: Kilback
                  status:
                    type: string
                    example: 'Reprehenderit sit vel impedit ullam quos dolores sed.'
                  avatar:
                    type: string
                    example: 'https://source.unsplash.com/random/300x300'
                  username:
                    type: string
                    example: susan74
                  email:
                    type: string
                    example: halle07@example.com
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 4
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: "\nAPI endpoints for app auth."
  -
    name: Users
    description: "\nAPI endpoints for users data"
