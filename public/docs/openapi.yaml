openapi: 3.0.3
info:
  title: Social-Network-API
  description: 'Social Network API for Front-end learning projects'
  version: 1.0.0
servers:
  -
    url: 'localhost:80'
paths:
  /api/auth/register:
    post:
      summary: 'Register new user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: Successfully
          content:
            text/plain:
              schema:
                type: string
                example: "registered {\n \"token\": $10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC\n}"
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: et
                last_name:
                  type: string
                  description: ''
                  example: delectus
                username:
                  type: string
                  description: ''
                  example: est
                email:
                  type: string
                  description: ''
                  example: atque
                password:
                  type: string
                  description: ''
                  example: maiores
                password_confirmation:
                  type: string
                  description: ''
                  example: delectus
              required:
                - first_name
                - last_name
                - username
                - email
                - password
                - password_confirmation
      security: []
  /api/auth/login:
    post:
      summary: 'Login user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Successfully
          content:
            text/plain:
              schema:
                type: string
                example: "logged in {\n \"token\": $10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC\n}"
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: ''
                  example: placeat
                password:
                  type: string
                  description: ''
                  example: consequatur
              required:
                - username
                - password
      security: []
  /api/auth/logout:
    get:
      summary: 'Logout current auth user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Authentication
  /api/auth/me:
    get:
      summary: 'Get info about current auth user.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Authentication
  /api/followers:
    get:
      summary: 'Return list of authenticated user followers'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Follow
  /api/following:
    get:
      summary: 'Return list of users, which authenticated user following'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Follow
  '/api/follow/{id}':
    post:
      summary: 'Endpoint for follow user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Follow
    delete:
      summary: 'Endpoint for unfollow user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Follow
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the follow.'
        example: 9
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: 'All users list'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Current page number'
          example: 3
          required: false
          schema:
            type: integer
            description: 'Current page number'
            example: 3
        -
          in: query
          name: per_page
          description: 'Page size'
          example: 12
          required: false
          schema:
            type: integer
            description: 'Page size'
            example: 12
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 3
                  data:
                    -
                      id: 25
                      first_name: Erich
                      last_name: Glover
                      status: 'Quia reiciendis dicta odio eius doloribus.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: cruickshank.flossieLRIbC
                      email: elijah.feeney@example.com
                    -
                      id: 26
                      first_name: Eveline
                      last_name: Hackett
                      status: 'Architecto deserunt nostrum corporis labore repellat nam sequi.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: ayana87yhZDW
                      email: ehowell@example.com
                    -
                      id: 27
                      first_name: Ashtyn
                      last_name: Braun
                      status: 'Nesciunt non nesciunt nihil.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: tstoltenbergmJZvE
                      email: kian.gibson@example.org
                    -
                      id: 28
                      first_name: Euna
                      last_name: Pacocha
                      status: 'Aut veniam soluta eos omnis.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: ferry.heavenE0dRH
                      email: king.angus@example.com
                    -
                      id: 29
                      first_name: Janae
                      last_name: Schinner
                      status: 'Est qui placeat et necessitatibus ratione.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: rutherford.lloydZUObR
                      email: raquel79@example.org
                    -
                      id: 30
                      first_name: Jesus
                      last_name: Schuppe
                      status: 'Repudiandae rerum et ipsa a labore enim.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: kiana.marksqOrAU
                      email: jamar.kuvalis@example.org
                    -
                      id: 31
                      first_name: Rodrigo
                      last_name: Kiehn
                      status: 'Omnis expedita necessitatibus dolores et id cum.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: ruecker.joeluKtkN
                      email: wcrooks@example.org
                    -
                      id: 32
                      first_name: Eugenia
                      last_name: Zboncak
                      status: 'Ut consequatur quis dolores aut repudiandae facilis eos.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: eliane17wHDTo
                      email: hudson.imani@example.net
                    -
                      id: 33
                      first_name: Willard
                      last_name: Pfannerstill
                      status: 'In aut in aut numquam inventore autem quibusdam.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: sydni.stehrtEN6q
                      email: kaya59@example.com
                    -
                      id: 34
                      first_name: Agustina
                      last_name: Douglas
                      status: 'Ea aliquam et accusamus dolorum quis cupiditate.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: dubuque.sigurd8Nlul
                      email: xokuneva@example.net
                    -
                      id: 35
                      first_name: Eldridge
                      last_name: Davis
                      status: 'Ab tempora nesciunt alias rem fugit reprehenderit sint.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: rigoberto31Kod7W
                      email: spencer.emiliano@example.com
                    -
                      id: 36
                      first_name: Jakob
                      last_name: Will
                      status: 'Aut exercitationem sint illo necessitatibus consequuntur dolorem et.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: consuelo.skilesH4lan
                      email: cooper.rutherford@example.net
                  first_page_url: 'http://social-network-api.test/api/users?page=1'
                  from: 25
                  next_page_url: 'http://social-network-api.test/api/users?page=4'
                  path: 'http://social-network-api.test/api/users'
                  per_page: 12
                  prev_page_url: 'http://social-network-api.test/api/users?page=2'
                  to: 36
                properties:
                  current_page:
                    type: integer
                    example: 3
                  data:
                    type: array
                    example:
                      -
                        id: 25
                        first_name: Erich
                        last_name: Glover
                        status: 'Quia reiciendis dicta odio eius doloribus.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: cruickshank.flossieLRIbC
                        email: elijah.feeney@example.com
                      -
                        id: 26
                        first_name: Eveline
                        last_name: Hackett
                        status: 'Architecto deserunt nostrum corporis labore repellat nam sequi.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: ayana87yhZDW
                        email: ehowell@example.com
                      -
                        id: 27
                        first_name: Ashtyn
                        last_name: Braun
                        status: 'Nesciunt non nesciunt nihil.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: tstoltenbergmJZvE
                        email: kian.gibson@example.org
                      -
                        id: 28
                        first_name: Euna
                        last_name: Pacocha
                        status: 'Aut veniam soluta eos omnis.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: ferry.heavenE0dRH
                        email: king.angus@example.com
                      -
                        id: 29
                        first_name: Janae
                        last_name: Schinner
                        status: 'Est qui placeat et necessitatibus ratione.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: rutherford.lloydZUObR
                        email: raquel79@example.org
                      -
                        id: 30
                        first_name: Jesus
                        last_name: Schuppe
                        status: 'Repudiandae rerum et ipsa a labore enim.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: kiana.marksqOrAU
                        email: jamar.kuvalis@example.org
                      -
                        id: 31
                        first_name: Rodrigo
                        last_name: Kiehn
                        status: 'Omnis expedita necessitatibus dolores et id cum.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: ruecker.joeluKtkN
                        email: wcrooks@example.org
                      -
                        id: 32
                        first_name: Eugenia
                        last_name: Zboncak
                        status: 'Ut consequatur quis dolores aut repudiandae facilis eos.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: eliane17wHDTo
                        email: hudson.imani@example.net
                      -
                        id: 33
                        first_name: Willard
                        last_name: Pfannerstill
                        status: 'In aut in aut numquam inventore autem quibusdam.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: sydni.stehrtEN6q
                        email: kaya59@example.com
                      -
                        id: 34
                        first_name: Agustina
                        last_name: Douglas
                        status: 'Ea aliquam et accusamus dolorum quis cupiditate.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: dubuque.sigurd8Nlul
                        email: xokuneva@example.net
                      -
                        id: 35
                        first_name: Eldridge
                        last_name: Davis
                        status: 'Ab tempora nesciunt alias rem fugit reprehenderit sint.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: rigoberto31Kod7W
                        email: spencer.emiliano@example.com
                      -
                        id: 36
                        first_name: Jakob
                        last_name: Will
                        status: 'Aut exercitationem sint illo necessitatibus consequuntur dolorem et.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: consuelo.skilesH4lan
                        email: cooper.rutherford@example.net
                    items:
                      type: object
                  first_page_url:
                    type: string
                    example: 'http://social-network-api.test/api/users?page=1'
                  from:
                    type: integer
                    example: 25
                  next_page_url:
                    type: string
                    example: 'http://social-network-api.test/api/users?page=4'
                  path:
                    type: string
                    example: 'http://social-network-api.test/api/users'
                  per_page:
                    type: integer
                    example: 12
                  prev_page_url:
                    type: string
                    example: 'http://social-network-api.test/api/users?page=2'
                  to:
                    type: integer
                    example: 36
      tags:
        - Users
      security: []
  '/api/users/{id}':
    get:
      summary: 'Get user by id'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 9
                  first_name: Jakob
                  last_name: Altenwerth
                  status: 'Itaque neque odit est.'
                  avatar: 'https://source.unsplash.com/random/300x300'
                  username: dickinson.shannaD3iHj
                  email: cprosacco@example.net
                properties:
                  id:
                    type: integer
                    example: 9
                  first_name:
                    type: string
                    example: Jakob
                  last_name:
                    type: string
                    example: Altenwerth
                  status:
                    type: string
                    example: 'Itaque neque odit est.'
                  avatar:
                    type: string
                    example: 'https://source.unsplash.com/random/300x300'
                  username:
                    type: string
                    example: dickinson.shannaD3iHj
                  email:
                    type: string
                    example: cprosacco@example.net
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 9
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: "\nAPI endpoints for app auth."
  -
    name: Follow
    description: "\nAPI endpoints for all followers functional"
  -
    name: Users
    description: "\nAPI endpoints for users data"
