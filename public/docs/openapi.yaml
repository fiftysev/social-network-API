openapi: 3.0.3
info:
  title: Social-Network-API
  description: 'Social Network API for Front-end learning projects'
  version: 1.0.0
servers:
  -
    url: 'localhost:80'
paths:
  /api/auth/register:
    post:
      summary: 'Register new user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: Successfully
          content:
            text/plain:
              schema:
                type: string
                example: "registered {\n \"token\": $10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC\n}"
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: odit
                last_name:
                  type: string
                  description: ''
                  example: consequatur
                username:
                  type: string
                  description: ''
                  example: saepe
                email:
                  type: string
                  description: ''
                  example: et
                password:
                  type: string
                  description: ''
                  example: nulla
                password_confirmation:
                  type: string
                  description: ''
                  example: praesentium
              required:
                - first_name
                - last_name
                - username
                - email
                - password
                - password_confirmation
      security: []
  /api/auth/login:
    post:
      summary: 'Login user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: Successfully
          content:
            text/plain:
              schema:
                type: string
                example: "logged in {\n \"token\": $10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC\n}"
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: ''
                  example: ut
                password:
                  type: string
                  description: ''
                  example: labore
              required:
                - username
                - password
      security: []
  /api/auth/logout:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Authentication
      security: []
  /api/users:
    get:
      summary: 'All users list'
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'Current page number'
          example: 3
          required: false
          schema:
            type: integer
            description: 'Current page number'
            example: 3
        -
          in: query
          name: per_page
          description: 'Page size'
          example: 12
          required: false
          schema:
            type: integer
            description: 'Page size'
            example: 12
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 3
                  data:
                    -
                      id: 25
                      first_name: Kristofer
                      last_name: Davis
                      status: 'Impedit qui debitis delectus dignissimos architecto quos.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: kebert
                      email: walker.adelia@example.com
                    -
                      id: 26
                      first_name: Derrick
                      last_name: Leuschke
                      status: 'Non repellat illo optio debitis voluptatem omnis.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: treutel.friedrich
                      email: qblock@example.org
                    -
                      id: 27
                      first_name: Beverly
                      last_name: Quitzon
                      status: 'Omnis enim quod tempora earum ex.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: ykeeling
                      email: hank09@example.net
                    -
                      id: 28
                      first_name: Arno
                      last_name: Cummerata
                      status: 'Qui explicabo minima facere neque dolor eveniet.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: kellie24
                      email: drath@example.net
                    -
                      id: 29
                      first_name: Aglae
                      last_name: Shanahan
                      status: 'Omnis eaque ea natus.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: obogan
                      email: beverly38@example.net
                    -
                      id: 30
                      first_name: Garett
                      last_name: Orn
                      status: 'Odit consequatur ea voluptatibus nemo accusamus ut eum.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: eloisa.labadie
                      email: queenie92@example.com
                    -
                      id: 31
                      first_name: Lue
                      last_name: Stiedemann
                      status: 'Voluptate tempora sit ut adipisci.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: foreilly
                      email: bryce92@example.net
                    -
                      id: 32
                      first_name: Kelton
                      last_name: Zemlak
                      status: 'Quae quibusdam commodi voluptatum aliquid aut suscipit.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: bechtelar.madilyn
                      email: gaylord.marguerite@example.net
                    -
                      id: 33
                      first_name: Hans
                      last_name: Gutkowski
                      status: 'Mollitia autem odit ipsum officiis repellat nobis vel.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: rex50
                      email: jazmyn.roberts@example.net
                    -
                      id: 34
                      first_name: Roman
                      last_name: Hermann
                      status: 'Saepe ea soluta atque tempora sunt consequatur aliquid.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: brekke.donna
                      email: frunte@example.org
                    -
                      id: 35
                      first_name: Rey
                      last_name: Beer
                      status: 'Nostrum sunt autem accusantium.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: walker.marian
                      email: leonor77@example.net
                    -
                      id: 36
                      first_name: Kobe
                      last_name: Okuneva
                      status: 'Veniam quia unde alias voluptatem.'
                      avatar: 'https://source.unsplash.com/random/300x300'
                      username: kacie75
                      email: myra37@example.org
                  first_page_url: 'http://social-network-api.test/api/users?page=1'
                  from: 25
                  next_page_url: 'http://social-network-api.test/api/users?page=4'
                  path: 'http://social-network-api.test/api/users'
                  per_page: 12
                  prev_page_url: 'http://social-network-api.test/api/users?page=2'
                  to: 36
                properties:
                  current_page:
                    type: integer
                    example: 3
                  data:
                    type: array
                    example:
                      -
                        id: 25
                        first_name: Kristofer
                        last_name: Davis
                        status: 'Impedit qui debitis delectus dignissimos architecto quos.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: kebert
                        email: walker.adelia@example.com
                      -
                        id: 26
                        first_name: Derrick
                        last_name: Leuschke
                        status: 'Non repellat illo optio debitis voluptatem omnis.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: treutel.friedrich
                        email: qblock@example.org
                      -
                        id: 27
                        first_name: Beverly
                        last_name: Quitzon
                        status: 'Omnis enim quod tempora earum ex.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: ykeeling
                        email: hank09@example.net
                      -
                        id: 28
                        first_name: Arno
                        last_name: Cummerata
                        status: 'Qui explicabo minima facere neque dolor eveniet.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: kellie24
                        email: drath@example.net
                      -
                        id: 29
                        first_name: Aglae
                        last_name: Shanahan
                        status: 'Omnis eaque ea natus.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: obogan
                        email: beverly38@example.net
                      -
                        id: 30
                        first_name: Garett
                        last_name: Orn
                        status: 'Odit consequatur ea voluptatibus nemo accusamus ut eum.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: eloisa.labadie
                        email: queenie92@example.com
                      -
                        id: 31
                        first_name: Lue
                        last_name: Stiedemann
                        status: 'Voluptate tempora sit ut adipisci.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: foreilly
                        email: bryce92@example.net
                      -
                        id: 32
                        first_name: Kelton
                        last_name: Zemlak
                        status: 'Quae quibusdam commodi voluptatum aliquid aut suscipit.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: bechtelar.madilyn
                        email: gaylord.marguerite@example.net
                      -
                        id: 33
                        first_name: Hans
                        last_name: Gutkowski
                        status: 'Mollitia autem odit ipsum officiis repellat nobis vel.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: rex50
                        email: jazmyn.roberts@example.net
                      -
                        id: 34
                        first_name: Roman
                        last_name: Hermann
                        status: 'Saepe ea soluta atque tempora sunt consequatur aliquid.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: brekke.donna
                        email: frunte@example.org
                      -
                        id: 35
                        first_name: Rey
                        last_name: Beer
                        status: 'Nostrum sunt autem accusantium.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: walker.marian
                        email: leonor77@example.net
                      -
                        id: 36
                        first_name: Kobe
                        last_name: Okuneva
                        status: 'Veniam quia unde alias voluptatem.'
                        avatar: 'https://source.unsplash.com/random/300x300'
                        username: kacie75
                        email: myra37@example.org
                    items:
                      type: object
                  first_page_url:
                    type: string
                    example: 'http://social-network-api.test/api/users?page=1'
                  from:
                    type: integer
                    example: 25
                  next_page_url:
                    type: string
                    example: 'http://social-network-api.test/api/users?page=4'
                  path:
                    type: string
                    example: 'http://social-network-api.test/api/users'
                  per_page:
                    type: integer
                    example: 12
                  prev_page_url:
                    type: string
                    example: 'http://social-network-api.test/api/users?page=2'
                  to:
                    type: integer
                    example: 36
      tags:
        - Users
      security: []
  '/api/users/{id}':
    get:
      summary: 'Get user by id'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 9
                  first_name: Penelope
                  last_name: Jones
                  status: 'Debitis omnis explicabo cum assumenda.'
                  avatar: 'https://source.unsplash.com/random/300x300'
                  username: eldora.hamill
                  email: angelita.mcdermott@example.com
                properties:
                  id:
                    type: integer
                    example: 9
                  first_name:
                    type: string
                    example: Penelope
                  last_name:
                    type: string
                    example: Jones
                  status:
                    type: string
                    example: 'Debitis omnis explicabo cum assumenda.'
                  avatar:
                    type: string
                    example: 'https://source.unsplash.com/random/300x300'
                  username:
                    type: string
                    example: eldora.hamill
                  email:
                    type: string
                    example: angelita.mcdermott@example.com
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 9
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: "\nAPI endpoints for app auth."
  -
    name: Users
    description: "\nAPI endpoints for users data"
